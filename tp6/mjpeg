#!/usr/bin/env python

from dsx import *
import sys

# Declaration of all MWMR fifos
tg_demux    = Mwmr('tg_demux',    32,  2)
demux_vld   = Mwmr('demux_vld',   32,  2)
vld_iqzz    = Mwmr('vld_iqzz',    128, 2)
iqzz_idct   = Mwmr('iqzz_idct',   256, 2)
idct_libu   = Mwmr('idct_libu',   64,  2)
libu_ramdac = Mwmr('libu_ramdac', 1280, 2)
huffman     = Mwmr('huffman',     32,  2)
quanti      = Mwmr('quanti',      64,  2)

tcg = Tcg(
    Task( 'tg', "tg",
          {'output':tg_demux },
          defines = {'FILE_NAME':'"video_160x120.mjpg"'}),
    Task( 'demux', "demux",
          { 'input':tg_demux,
            'output':demux_vld,
            'huffman':huffman,
            'quanti':quanti },
            defines = {'WIDTH':"160",
                       'HEIGHT':"120"}),
    Task( 'vld', "vld", 
          { 'input':demux_vld,
            'output':vld_iqzz,
            'huffman':huffman},
          defines = {'WIDTH':"160",
                  'HEIGHT':"120"}),

    Task( 'iqzz', "iqzz",
            { 'input':vld_iqzz,
              'output':iqzz_idct,
              'quanti':quanti},
          defines = {'WIDTH':"160",
                  'HEIGHT':"120"}),

    Task( 'idct', "idct",
            { 'input':iqzz_idct,
              'output':idct_libu},
          defines = {'WIDTH':"160",
                  'HEIGHT':"120"}),
            

    Task( 'libu', "libu",
            { 'input':idct_libu,
              'output':libu_ramdac},
          defines = {'WIDTH':"160",
                  'HEIGHT':"120"}),
    Task( 'ramdac', "ramdac",
          { 'input': libu_ramdac },
            defines = {'WIDTH':"160",
                       'HEIGHT':"120"}),
    )

from vgmn_noirq_multi import VgmnNoirqMulti

archi = VgmnNoirqMulti(proc_count = 4, ram_count = 1)

mapper = Mapper (archi, tcg)

# Mapping the MWMR channel

mapper.map ("tg_demux", 
	buffer = "cram0", 
	status = "cram0")

mapper.map ("demux_vld", 
	buffer = "cram0", 
	status = "cram0")
mapper.map ("vld_iqzz", 
	buffer = "cram0", 
	status = "cram0")
mapper.map ("iqzz_idct", 
	buffer = "cram0", 
	status = "cram0")
mapper.map ("idct_libu", 
	buffer = "cram0", 
	status = "cram0")
mapper.map ("libu_ramdac", 
	buffer = "cram0", 
	status = "cram0")
mapper.map ("huffman", 
	buffer = "cram0", 
	status = "cram0")
mapper.map ("quanti", 
	buffer = "cram0", 
	status = "cram0")

# Mapping tasks
mapper.map("tg", coprocessor = "tg0", controller = "tg0_ctrl")

mapper.map("demux", 
	run = "cpu3", 
	stack = "cram0", 
	desc = "cram0")
mapper.map("vld",   
	run = "cpu1", 
	stack = "cram0", 
	desc = "cram0")
mapper.map("iqzz",  
	run = "cpu2", 
	stack = "cram0", 
	desc = "cram0")
mapper.map("idct",  
	run = "cpu0", 
	stack = "cram0", 
	desc = "cram0")
mapper.map("libu",  
	run = "cpu2", 
	stack = "cram0", 
	desc = "cram0")

mapper.map("ramdac", coprocessor = "ramdac0", controller = "ramdac0_ctrl")

# software objects mapping

for i in range(4) :
        mapper.map("cpu%d"%i, private = "cram0", shared = "uram0")

mapper.map(tcg,
                private = "cram0",
                shared  = "uram0",
                code    = "cram0",

                # These lines are for getting output messages:
                tty = "tty0",
                tty_no = 0)

# Embedded software linked with the Mutek/S OS
mapper.generate( MutekS() )

# The software application for a POSX workstation can still be generated
tcg.generate( Posix() )

